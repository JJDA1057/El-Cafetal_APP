<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>